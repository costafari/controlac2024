package sv.com.lc.controlac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FacturasAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacturasAllPropertiesEquals(Facturas expected, Facturas actual) {
        assertFacturasAutoGeneratedPropertiesEquals(expected, actual);
        assertFacturasAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacturasAllUpdatablePropertiesEquals(Facturas expected, Facturas actual) {
        assertFacturasUpdatableFieldsEquals(expected, actual);
        assertFacturasUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacturasAutoGeneratedPropertiesEquals(Facturas expected, Facturas actual) {
        assertThat(expected)
            .as("Verify Facturas auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacturasUpdatableFieldsEquals(Facturas expected, Facturas actual) {
        assertThat(expected)
            .as("Verify Facturas relevant properties")
            .satisfies(e -> assertThat(e.getNumeroFactura()).as("check numeroFactura").isEqualTo(actual.getNumeroFactura()))
            .satisfies(e -> assertThat(e.getFechaFactura()).as("check fechaFactura").isEqualTo(actual.getFechaFactura()))
            .satisfies(e -> assertThat(e.getCondicionPago()).as("check condicionPago").isEqualTo(actual.getCondicionPago()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacturasUpdatableRelationshipsEquals(Facturas expected, Facturas actual) {
        assertThat(expected)
            .as("Verify Facturas relationships")
            .satisfies(e -> assertThat(e.getClientes()).as("check clientes").isEqualTo(actual.getClientes()))
            .satisfies(e -> assertThat(e.getLotes()).as("check lotes").isEqualTo(actual.getLotes()))
            .satisfies(e -> assertThat(e.getDetalles()).as("check detalles").isEqualTo(actual.getDetalles()));
    }
}
