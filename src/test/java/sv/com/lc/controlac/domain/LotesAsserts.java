package sv.com.lc.controlac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LotesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLotesAllPropertiesEquals(Lotes expected, Lotes actual) {
        assertLotesAutoGeneratedPropertiesEquals(expected, actual);
        assertLotesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLotesAllUpdatablePropertiesEquals(Lotes expected, Lotes actual) {
        assertLotesUpdatableFieldsEquals(expected, actual);
        assertLotesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLotesAutoGeneratedPropertiesEquals(Lotes expected, Lotes actual) {
        assertThat(expected)
            .as("Verify Lotes auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLotesUpdatableFieldsEquals(Lotes expected, Lotes actual) {
        assertThat(expected)
            .as("Verify Lotes relevant properties")
            .satisfies(e -> assertThat(e.getCantidad()).as("check cantidad").isEqualTo(actual.getCantidad()))
            .satisfies(e -> assertThat(e.getFechaEntrada()).as("check fechaEntrada").isEqualTo(actual.getFechaEntrada()))
            .satisfies(e -> assertThat(e.getLote()).as("check lote").isEqualTo(actual.getLote()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLotesUpdatableRelationshipsEquals(Lotes expected, Lotes actual) {
        assertThat(expected)
            .as("Verify Lotes relationships")
            .satisfies(e -> assertThat(e.getProveedores()).as("check proveedores").isEqualTo(actual.getProveedores()));
    }
}
